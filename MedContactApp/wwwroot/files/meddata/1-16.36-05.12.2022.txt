У меня вопрос к обсуждению.
Проект получается достаточно объемный.
Можно ли отложить защиту проекта на недельку - другую, чтобы довести его до ума, и представить в более законченном виде.
Мне кажется, многим был бы интересен такой вариант.
Может быть, можно этот вопрос вынести на голосование?


Посоветуйте, какой функционал из перечисленного стоит перенести в WebApi?  

Как работать с RefreshToken в WebApi?
Допустим, пользователь залогинился. Отправляет запрос, допустим, в UserController в метод Settings.
Тогда я вижу 3 варианта.
1.) Пользователь вручную обновляет токен методом RefreshToken , и только потом запускает Settings.
2.) В  будущем представлении (на Angular, например) автоматически перед каждым запросом к методу, требующему авторизации, будет запускаться запрос RefreshToken.
3.) В условном методе Settings будет сначала запускаться RefreshToken, а потом собственная логика, и все вместе возвращаться пользователю.

Админпанель переносить в WebApi?

Мне использовать репозитории и UnitOfWork или все переделать с медиатором и командами/запросами? 
Или делать сервисы, заполненные командами и запросами?

Таблицы передавать клиенту целиком или постранично?

